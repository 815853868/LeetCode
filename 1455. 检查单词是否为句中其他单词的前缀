思路
遍历数组, 检查当前字符串的前缀是目标字符串即可
复杂度
时间复杂度 O(NM): N 表示单词个数, M 表示搜索字符串长度, 对于每个单词需要匹配一遍搜索字符串, 所以复杂度是 O(NM)
空间复杂度 O(1) 或 O(N): 如果利用 split 转成字符串列表就是 O(N), 如果直接对字符串本身进行处理就是 O(1). 下面的代码中用的是 O(N)方法, 更简洁一些, 感兴趣的同学可以自己试试 O(1)空间的做法, 就是碰到空格后重置下标即可

class Solution:
    def isPrefixOfWord(self, sentence: str, searchWord: str) -> int:
        a = sentence.split()
        res = -1
        for j, w in enumerate(a):
            if len(w) < len(searchWord):
                # 长度小于搜索字符串, 直接不满足要求
                continue
            for i in range(len(searchWord)):
                if w[i] != searchWord[i]:
                    # 某一位不匹配了, 直接break
                    break
            else:
                # 都匹配, 就是要求的结果
                # 注意要求的下标是从1开始的
                return j + 1
        return res
